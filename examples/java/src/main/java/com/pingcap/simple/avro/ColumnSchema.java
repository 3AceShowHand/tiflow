/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.pingcap.simple.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ColumnSchema extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5778017247332637728L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ColumnSchema\",\"namespace\":\"com.pingcap.simple.avro\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"dataType\",\"type\":{\"type\":\"record\",\"name\":\"DataType\",\"fields\":[{\"name\":\"mysqlType\",\"type\":\"string\"},{\"name\":\"charset\",\"type\":\"string\"},{\"name\":\"collate\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"long\"},{\"name\":\"decimal\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"elements\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null},{\"name\":\"unsigned\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"zerofill\",\"type\":[\"null\",\"boolean\"],\"default\":null}],\"docs\":\"each column's mysql type information\"}},{\"name\":\"nullable\",\"type\":\"boolean\"},{\"name\":\"default\",\"type\":[\"null\",\"string\"]}],\"docs\":\"each column's schema information\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ColumnSchema> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ColumnSchema> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ColumnSchema> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ColumnSchema> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ColumnSchema> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ColumnSchema to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ColumnSchema from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ColumnSchema instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ColumnSchema fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence name;
  private com.pingcap.simple.avro.DataType dataType;
  private boolean nullable;
  private java.lang.CharSequence default$;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ColumnSchema() {}

  /**
   * All-args constructor.
   * @param name The new value for name
   * @param dataType The new value for dataType
   * @param nullable The new value for nullable
   * @param default$ The new value for default
   */
  public ColumnSchema(java.lang.CharSequence name, com.pingcap.simple.avro.DataType dataType, java.lang.Boolean nullable, java.lang.CharSequence default$) {
    this.name = name;
    this.dataType = dataType;
    this.nullable = nullable;
    this.default$ = default$;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return dataType;
    case 2: return nullable;
    case 3: return default$;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: dataType = (com.pingcap.simple.avro.DataType)value$; break;
    case 2: nullable = (java.lang.Boolean)value$; break;
    case 3: default$ = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'dataType' field.
   * @return The value of the 'dataType' field.
   */
  public com.pingcap.simple.avro.DataType getDataType() {
    return dataType;
  }


  /**
   * Sets the value of the 'dataType' field.
   * @param value the value to set.
   */
  public void setDataType(com.pingcap.simple.avro.DataType value) {
    this.dataType = value;
  }

  /**
   * Gets the value of the 'nullable' field.
   * @return The value of the 'nullable' field.
   */
  public boolean getNullable() {
    return nullable;
  }


  /**
   * Sets the value of the 'nullable' field.
   * @param value the value to set.
   */
  public void setNullable(boolean value) {
    this.nullable = value;
  }

  /**
   * Gets the value of the 'default$' field.
   * @return The value of the 'default$' field.
   */
  public java.lang.CharSequence getDefault$() {
    return default$;
  }


  /**
   * Sets the value of the 'default$' field.
   * @param value the value to set.
   */
  public void setDefault$(java.lang.CharSequence value) {
    this.default$ = value;
  }

  /**
   * Creates a new ColumnSchema RecordBuilder.
   * @return A new ColumnSchema RecordBuilder
   */
  public static com.pingcap.simple.avro.ColumnSchema.Builder newBuilder() {
    return new com.pingcap.simple.avro.ColumnSchema.Builder();
  }

  /**
   * Creates a new ColumnSchema RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ColumnSchema RecordBuilder
   */
  public static com.pingcap.simple.avro.ColumnSchema.Builder newBuilder(com.pingcap.simple.avro.ColumnSchema.Builder other) {
    if (other == null) {
      return new com.pingcap.simple.avro.ColumnSchema.Builder();
    } else {
      return new com.pingcap.simple.avro.ColumnSchema.Builder(other);
    }
  }

  /**
   * Creates a new ColumnSchema RecordBuilder by copying an existing ColumnSchema instance.
   * @param other The existing instance to copy.
   * @return A new ColumnSchema RecordBuilder
   */
  public static com.pingcap.simple.avro.ColumnSchema.Builder newBuilder(com.pingcap.simple.avro.ColumnSchema other) {
    if (other == null) {
      return new com.pingcap.simple.avro.ColumnSchema.Builder();
    } else {
      return new com.pingcap.simple.avro.ColumnSchema.Builder(other);
    }
  }

  /**
   * RecordBuilder for ColumnSchema instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ColumnSchema>
    implements org.apache.avro.data.RecordBuilder<ColumnSchema> {

    private java.lang.CharSequence name;
    private com.pingcap.simple.avro.DataType dataType;
    private com.pingcap.simple.avro.DataType.Builder dataTypeBuilder;
    private boolean nullable;
    private java.lang.CharSequence default$;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.pingcap.simple.avro.ColumnSchema.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.dataType)) {
        this.dataType = data().deepCopy(fields()[1].schema(), other.dataType);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasDataTypeBuilder()) {
        this.dataTypeBuilder = com.pingcap.simple.avro.DataType.newBuilder(other.getDataTypeBuilder());
      }
      if (isValidValue(fields()[2], other.nullable)) {
        this.nullable = data().deepCopy(fields()[2].schema(), other.nullable);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.default$)) {
        this.default$ = data().deepCopy(fields()[3].schema(), other.default$);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing ColumnSchema instance
     * @param other The existing instance to copy.
     */
    private Builder(com.pingcap.simple.avro.ColumnSchema other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dataType)) {
        this.dataType = data().deepCopy(fields()[1].schema(), other.dataType);
        fieldSetFlags()[1] = true;
      }
      this.dataTypeBuilder = null;
      if (isValidValue(fields()[2], other.nullable)) {
        this.nullable = data().deepCopy(fields()[2].schema(), other.nullable);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.default$)) {
        this.default$ = data().deepCopy(fields()[3].schema(), other.default$);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.pingcap.simple.avro.ColumnSchema.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.pingcap.simple.avro.ColumnSchema.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataType' field.
      * @return The value.
      */
    public com.pingcap.simple.avro.DataType getDataType() {
      return dataType;
    }


    /**
      * Sets the value of the 'dataType' field.
      * @param value The value of 'dataType'.
      * @return This builder.
      */
    public com.pingcap.simple.avro.ColumnSchema.Builder setDataType(com.pingcap.simple.avro.DataType value) {
      validate(fields()[1], value);
      this.dataTypeBuilder = null;
      this.dataType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'dataType' field has been set.
      * @return True if the 'dataType' field has been set, false otherwise.
      */
    public boolean hasDataType() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'dataType' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.pingcap.simple.avro.DataType.Builder getDataTypeBuilder() {
      if (dataTypeBuilder == null) {
        if (hasDataType()) {
          setDataTypeBuilder(com.pingcap.simple.avro.DataType.newBuilder(dataType));
        } else {
          setDataTypeBuilder(com.pingcap.simple.avro.DataType.newBuilder());
        }
      }
      return dataTypeBuilder;
    }

    /**
     * Sets the Builder instance for the 'dataType' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.pingcap.simple.avro.ColumnSchema.Builder setDataTypeBuilder(com.pingcap.simple.avro.DataType.Builder value) {
      clearDataType();
      dataTypeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'dataType' field has an active Builder instance
     * @return True if the 'dataType' field has an active Builder instance
     */
    public boolean hasDataTypeBuilder() {
      return dataTypeBuilder != null;
    }

    /**
      * Clears the value of the 'dataType' field.
      * @return This builder.
      */
    public com.pingcap.simple.avro.ColumnSchema.Builder clearDataType() {
      dataType = null;
      dataTypeBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'nullable' field.
      * @return The value.
      */
    public boolean getNullable() {
      return nullable;
    }


    /**
      * Sets the value of the 'nullable' field.
      * @param value The value of 'nullable'.
      * @return This builder.
      */
    public com.pingcap.simple.avro.ColumnSchema.Builder setNullable(boolean value) {
      validate(fields()[2], value);
      this.nullable = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'nullable' field has been set.
      * @return True if the 'nullable' field has been set, false otherwise.
      */
    public boolean hasNullable() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'nullable' field.
      * @return This builder.
      */
    public com.pingcap.simple.avro.ColumnSchema.Builder clearNullable() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'default$' field.
      * @return The value.
      */
    public java.lang.CharSequence getDefault$() {
      return default$;
    }


    /**
      * Sets the value of the 'default$' field.
      * @param value The value of 'default$'.
      * @return This builder.
      */
    public com.pingcap.simple.avro.ColumnSchema.Builder setDefault$(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.default$ = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'default$' field has been set.
      * @return True if the 'default$' field has been set, false otherwise.
      */
    public boolean hasDefault$() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'default$' field.
      * @return This builder.
      */
    public com.pingcap.simple.avro.ColumnSchema.Builder clearDefault$() {
      default$ = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ColumnSchema build() {
      try {
        ColumnSchema record = new ColumnSchema();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        if (dataTypeBuilder != null) {
          try {
            record.dataType = this.dataTypeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("dataType"));
            throw e;
          }
        } else {
          record.dataType = fieldSetFlags()[1] ? this.dataType : (com.pingcap.simple.avro.DataType) defaultValue(fields()[1]);
        }
        record.nullable = fieldSetFlags()[2] ? this.nullable : (java.lang.Boolean) defaultValue(fields()[2]);
        record.default$ = fieldSetFlags()[3] ? this.default$ : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ColumnSchema>
    WRITER$ = (org.apache.avro.io.DatumWriter<ColumnSchema>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ColumnSchema>
    READER$ = (org.apache.avro.io.DatumReader<ColumnSchema>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.name);

    this.dataType.customEncode(out);

    out.writeBoolean(this.nullable);

    if (this.default$ == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.default$);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);

      if (this.dataType == null) {
        this.dataType = new com.pingcap.simple.avro.DataType();
      }
      this.dataType.customDecode(in);

      this.nullable = in.readBoolean();

      if (in.readIndex() != 1) {
        in.readNull();
        this.default$ = null;
      } else {
        this.default$ = in.readString(this.default$ instanceof Utf8 ? (Utf8)this.default$ : null);
      }

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);
          break;

        case 1:
          if (this.dataType == null) {
            this.dataType = new com.pingcap.simple.avro.DataType();
          }
          this.dataType.customDecode(in);
          break;

        case 2:
          this.nullable = in.readBoolean();
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.default$ = null;
          } else {
            this.default$ = in.readString(this.default$ instanceof Utf8 ? (Utf8)this.default$ : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










